---
# tasks file for coreos

#
# basic login env.
#
- name: check if we can connect ...
  # wait_for_connection:
  #   timeout:  5
  raw:      '/bin/hostname'
  until:    (server_connection_info.rc == 0)
  retries:  5
  delay:    0
  register:   server_connection_info
  ignore_errors: yes

- name: install basic login config
  when: (server_connection_info|failed)
  block:
    - name: install basic sshd_config (for root user login)
      when:
        -   (coreos_sshd_config_with_rootlogin != None)
        -   (coreos_sshd_config_with_rootlogin != '')
      include_role:
        name:   ximenpo.coreos-copy
      vars:
        ansible_user:  root
        src:    '{{ coreos_sshd_config_with_rootlogin }}'
        dest:   /etc/ssh/sshd_config
        owner:  root:root
        mode:   '644'
    - meta:  reset_connection
    - meta:  clear_host_errors
    - name: install login     ssh keys
      when:
        -   (coreos_authorized_keys != None)
        -   (coreos_authorized_keys != '')
      include_role:
        name:   ximenpo.coreos-copy
      vars:
        ansible_user:  root
        src:    '{{ coreos_authorized_keys }}'
        dest:   /home/core/.ssh/authorized_keys
        owner:  core:core
        mode:   '644'

#
# CoreOS system env.
#
- name: CoreOS system env.
  become: true
  become_method: sudo
  block:
    - name: sync basic system files
      when:
        -   (coreos_basic_system_files != None)
        -   (coreos_basic_system_files != '')
        -   (coreos_basic_system_files != [])
      with_items: '{{ coreos_basic_system_files }}'
      include_role: 
        name: ximenpo.coreos-copy
      vars:
        src:    '{{ item.src }}'
        dest:   '{{ item.dest }}'
        mode:   '{{ item.dest|default("644") }}'
        owner:  '{{ item.owner|default("root") }}'
        group:  '{{ item.group|default("root") }}'
    - name: install pypy env
      when: (coreos_install_pypy)
      include_role:
        name: ximenpo.coreos-pypy
    - name: sync system files
      when:
        -   (coreos_system_files != None)
        -   (coreos_system_files != '')
        -   (coreos_system_files != [])
      with_items: '{{ coreos_system_files }}'
      include_role: 
        name: ximenpo.coreos-copy
      vars:
        src:    '{{ item.src }}'
        dest:   '{{ item.dest }}'
        mode:   '{{ item.dest|default("644") }}'
        owner:  '{{ item.owner|default("root") }}'
        group:  '{{ item.group|default("root") }}'
    - name: sync extra system files
      when:
        -   (coreos_extra_system_files != None)
        -   (coreos_extra_system_files != '')
        -   (coreos_extra_system_files != [])
      with_items: '{{ coreos_extra_system_files }}'
      include_role: 
        name: ximenpo.coreos-copy
      vars:
        src:    '{{ item.src }}'
        dest:   '{{ item.dest }}'
        mode:   '{{ item.dest|default("644") }}'
        owner:  '{{ item.owner|default("root") }}'
        group:  '{{ item.group|default("root") }}'

#
# CoreOS user(core) env.
#
- name: sync CoreOS user(core) files.
  block:
    - name: sync core user files
      when:
        -   (coreos_coreuser_files != None)
        -   (coreos_coreuser_files != '')
        -   (coreos_coreuser_files != [])
      with_items: '{{coreos_coreuser_files}}'
      include_role: 
          name:   ximenpo.coreos-copy
      vars:
        src:    '{{ item.src }}'
        dest:   '{{ item.dest }}'
        mode:   '{{ item.dest|default("644") }}'
        owner:  '{{ item.owner|default("core") }}'
        group:  '{{ item.group|default("core") }}'
    - name: sync extra core user files
      when:
        -   (coreos_extra_coreuser_files != None)
        -   (coreos_extra_coreuser_files != '')
        -   (coreos_extra_coreuser_files != [])
      with_items: '{{coreos_extra_coreuser_files}}'
      include_role: 
          name:   ximenpo.coreos-copy
      vars:
        src:    '{{ item.src }}'
        dest:   '{{ item.dest }}'
        mode:   '{{ item.dest|default("644") }}'
        owner:  '{{ item.owner|default("core") }}'
        group:  '{{ item.group|default("core") }}'
    - name: install .toolboxrc
      when: (coreos_install_toolboxrc)
      include_role: 
        name:   ximenpo.coreos-toolboxrc

#
# install system components
#
- name: install pip components
  become: true
  become_method: sudo
  block:
    - name: preset pip packages
      when:
        -   (coreos_pip_packages != None)
        -   (coreos_pip_packages != '')
        -   (coreos_pip_packages != [])
      with_items: '{{coreos_pip_packages}}'
      pip:
        name:         '{{ item }}'
        extra_args:   '{{ coreos_pip_extra_args|default("") }}'
    - name: preset pip versioned packages
      when:
        -   (coreos_pip_versioned_packages != None)
        -   (coreos_pip_versioned_packages != '')
        -   (coreos_pip_versioned_packages != [])
      with_items: '{{coreos_pip_versioned_packages}}'
      pip:
        name:         '{{ item.name }}'
        version:      '{{ item.version }}'
        extra_args:   '{{ coreos_pip_extra_args|default("") }}'
    - name: preset pip requirments
      when:
        -   (coreos_pip_requirements != None)
        -   (coreos_pip_requirements != '')
      pip:
        requirements: '{{ icoreos_pip_requirements }}'
        extra_args:   '{{ coreos_pip_extra_args|default("") }}'

- name: install docker images
  block:
    - name: preset docker images
      when:
        -   (coreos_docker_images != None)
        -   (coreos_docker_images != '')
        -   (coreos_docker_images != [])
      with_items: '{{coreos_docker_images}}'
      docker_image:
        name:         '{{ item.name }}'
        tag:          '{{ item.tag|default("latest") }}'

#
# execute some task files
#
- name: execute task files
  block:
    - name: sudo task files
      become: true
      become_method: sudo
      when:
        -   (coreos_system_task_files != None)
        -   (coreos_system_task_files != '')
        -   (coreos_system_task_files != [])
      with_items: '{{coreos_system_task_files}}'
      include:  '{{ item }}'
    - name: another task files
      when:
        -   (coreos_task_files != None)
        -   (coreos_task_files != '')
        -   (coreos_task_files != [])
      with_items: '{{coreos_task_files}}'
      include:  '{{ item }}'

#
# CoreOS system initialize(cloudinit).
#
- name: CoreOS cloudinit.
  when: (coreos_install_cloudinit)
  include_role: 
    name: ximenpo.coreos-cloudinit

#
# execute extra task files
#
- name: execute extra task files
  block:
    - name: sudo task files
      become: true
      become_method: sudo
      when:
        -   (coreos_extra_system_task_files != None)
        -   (coreos_extra_system_task_files != '')
        -   (coreos_extra_system_task_files != [])
      with_items: '{{coreos_extra_system_task_files}}'
      include:  '{{ item }}'
    - name: another task files
      when:
        -   (coreos_extra_task_files != None)
        -   (coreos_extra_task_files != '')
        -   (coreos_extra_task_files != [])
      with_items: '{{coreos_extra_task_files}}'
      include:  '{{ item }}'
